subprojects {
	apply plugin: 'java'
	apply plugin: 'findbugs'
	apply plugin: 'pmd'

	repositories {
		mavenLocal()
		flatDir name: 'localRepository', dirs: '../lib'
		flatDir name: 'localRepositoryAlt', dirs: '..'
		mavenCentral()
	}

	dependencies {
		compile project(':source:arcane')
		compile project(':source:deckbuilder')
	}

	sourceSets {
		main {
			java {
				srcDir 'source/src'
				exclude '**/empty.txt'
			}
			resources {
				srcDir 'source/resources'
				exclude '**/empty.txt'
			}
		}
	}

	findbugs {
		ignoreFailures = true
	}
	tasks.withType(FindBugs) {
		reports {
			xml.enabled = false
			html.enabled = true
		}
	}
	pmd {
		ignoreFailures = true
	}

}

project(':plugins:CardGenerator') {
	archivesBaseName = "plugin-cardgenerator"
}

project(':plugins:CrystalkeepRulings') {
	archivesBaseName = "plugin-crystalkeeprulings"
}

project(':plugins:MagicTraders') {
	archivesBaseName = "plugin-magictraders"
}

project(':plugins:MTGVault') {
	archivesBaseName = "plugin-mtgvault"
}

project(':plugins:MWSPlay') {
	archivesBaseName = "plugin-mwsplay"
}

project(':plugins:TCGplayer') {
	archivesBaseName = "plugin-tcgplayer"
	dependencies {
		compile files("source/lib/xom-1.2.7.jar")
	}
}

project(':plugins:Tester') {
	archivesBaseName = "plugin-tester"
}


task dists(dependsOn: subprojects.jar) {
	List<String> excludeJars = ['Tester']

	subprojects.each {
		project -> if(!excludeJars.any{it.equals(project.name)}) copy {
			from project.libsDir
			into project.projectDir
		}
	}
}